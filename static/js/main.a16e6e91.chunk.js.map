{"version":3,"sources":["routes/private-route.tsx","layouts/default/header.tsx","layouts/default/footer.tsx","layouts/default/index.tsx","pages/home/index.tsx","services/client/index.ts","utils/http-client/index.ts","components/clouds-data-grid/index.tsx","components/filter-provider/index.tsx","routes/paths.ts","pages/clouds/index.tsx","services/api/index.ts","routes/index.tsx","reportWebVitals.js","index.tsx"],"names":["PrivateRoute","props","localStorage","getItem","to","Header","AppBar","position","Toolbar","PlaylistAddCheck","fontSize","Box","Typography","variant","component","color","Footer","Container","Divider","textAlign","m","Link","href","Date","getFullYear","theme","createMuiTheme","palette","primary","deepOrange","secondary","blue","DefaultLayout","children","ThemeProvider","minHeight","HomePage","gutterBottom","List","ListItem","Button","MainServer","baseUrl","_baseUrl","_headers","this","key","value","method","url","params","data","headers","axios","request","baseURL","process","useStyles","makeStyles","table","height","width","CloudsDataGrid","ProviderListItem","isLoading","classes","className","columns","field","headerName","flex","sortable","filterable","hide","type","rows","pageSize","disableColumnMenu","disableDensitySelector","loading","components","GridToolbar","checkboxSelection","filterProviderBox","marginTop","marginBottom","maxWidth","FilterProvider","onChange","MenuList","ALL","title","GOOGLE","AWS","DO","AZURE","UP_CLOUD","FormControl","fullWidth","InputLabel","Select","map","item","MenuItem","paths","path","exact","isPrivate","useState","setIsLoading","clouds","setClouds","filterProvider","setFilterProvider","filteredClouds","setFilteredClouds","useEffect","then","response","index","id","catch","error","alert","message","newFilteredClouds","filter","cloud_name","startsWith","event","target","AppRoute","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a16e6e91.chunk.js","sourcesContent":["import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {Path} from \"./paths\";\n\ntype Props = Path;\n\nexport const PrivateRoute: React.FC<Props> = (props): JSX.Element => {\n    // TODO: Handle this part after authentication\n    const token = localStorage.getItem('token');\n\n    return token ? <Route {...props} /> : <Redirect to=\"/login\"/>;\n};\n","import React from 'react';\nimport {AppBar, Box, Toolbar, Typography} from '@material-ui/core';\nimport {PlaylistAddCheck as PlaylistAddCheckIcon,} from '@material-ui/icons';\n\n/**\n * Header of default layout\n * @return {JSX.Element}\n * @constructor\n */\nconst Header: React.FC = (): JSX.Element => {\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <PlaylistAddCheckIcon fontSize=\"large\"/>\n                <Box>\n                    <Typography variant=\"h5\" component=\"h1\" color=\"inherit\">\n                        â€Œ Aiven cloud selection\n                    </Typography>\n                </Box>\n                {/* TODO: Add Login/Logout */}\n                {/* {user ?\n              (<Button\n                  color=\"inherit\"\n                  aria-label=\"Logout\"\n                  onClick={logout}>Logout</Button>) :\n              (<Button\n                  color=\"inherit\"\n                  aria-label=\"Login\"\n                  component={Link}\n                  to=\"/login\">Login</Button>)\n          }*/}\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport {Box, Container, Divider, Link, Typography} from '@material-ui/core';\n\n/**\n * Footer of default layout\n * @return {JSX.Element}\n * @constructor\n */\nconst Footer: React.FC = (): JSX.Element => {\n    return (\n        <footer>\n            <Container>\n                <Divider/>\n                <Box textAlign=\"center\" m={2}>\n                    <Typography variant=\"body2\" color=\"primary\">\n                        A simple Aiven cloud selection {' '}\n                        <Link color=\"inherit\" href=\"https://mo.js.org/\">\n                            mo.js.org\n                        </Link>{' '}\n                        &#9679; 2020 - {new Date().getFullYear()}\n                    </Typography>\n                </Box>\n            </Container>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport {AppBar, Box} from '@material-ui/core';\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\nimport {deepOrange, blue} from '@material-ui/core/colors';\nimport Header from './header';\nimport Footer from './footer';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: deepOrange,\n        secondary: blue,\n    },\n});\n\n/**\n * Default layout\n * @param  {children} Children\n * @return {JSX.Element}\n */\nconst DefaultLayout: React.FC = ({children}): JSX.Element => {\n    return (\n        <ThemeProvider theme={theme}>\n            <AppBar position=\"static\">\n                <Header/>\n            </AppBar>\n            <Box m={3} minHeight=\"82vh\">\n                {children}\n            </Box>\n            <Footer/>\n        </ThemeProvider>\n    );\n}\n\nexport default DefaultLayout;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport DefaultLayout from '../../layouts/default';\nimport Typography from '@material-ui/core/Typography';\nimport {Button, List, ListItem} from '@material-ui/core';\n\nconst HomePage: React.FC = (): JSX.Element => {\n\n    return (\n        <DefaultLayout>\n            <Typography variant=\"h5\" gutterBottom>\n                Home page as a sample\n            </Typography>\n            <Typography gutterBottom>\n                Lorem Ipsum is simply dummy text of the printing and typesetting\n                industry. Lorem Ipsum has been the industrys standard dummy text\n                ever since the 1500s, when an unknown printer took a galley of type\n                and scrambled it to make a type specimen book. It has survived not\n                only five centuries, but also the leap into electronic typesetting,\n                remaining essentially unchanged. It was popularised in the 1960s\n                with the release of Letraset sheets containing Lorem Ipsum passages,\n                and more recently with desktop publishing software like Aldus\n                PageMaker including versions of Lorem Ipsum.\n            </Typography>\n            <Typography variant=\"h6\">\n                Pages:\n            </Typography>\n            <List>\n                <ListItem>\n                    <Button\n                        color=\"secondary\"\n                        component={Link}\n                        to=\"/\">Home page</Button>\n                </ListItem>\n                <ListItem>\n                    <Button\n                        color=\"secondary\"\n                        component={Link}\n                        to=\"/clouds\">Cloud page</Button>\n                </ListItem>\n            </List>\n        </DefaultLayout>\n    );\n}\n\nexport default HomePage;\n","import {HttpClient} from '../../utils/http-client';\n\nexport const MainServer = new HttpClient(process.env.REACT_APP_BASE_URL as string);\n","import axios from 'axios';\n\ntype Method = 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE';\n\nexport class HttpClient {\n    _baseUrl: string;\n    _headers: AnyObject;\n\n    constructor(baseUrl: string) {\n        this._baseUrl = baseUrl;\n        this._headers = {};\n    }\n\n    setHeader(key: string, value: string) {\n        this._headers = {...this._headers, [key]: value};\n        return this;\n    }\n\n    removeHeader(key: string) {\n        delete this._headers[key];\n    }\n\n    request<R, P = undefined, D = undefined, H = undefined>(\n        method: Method,\n        url: string,\n        params?: P,\n        data?: D,\n        headers?: H\n    ) {\n        return axios.request<R>({\n            baseURL: this._baseUrl,\n            method,\n            url,\n            params,\n            data,\n            headers: {...this._headers, ...headers},\n        });\n    }\n}","import React from 'react';\nimport {DataGrid, GridToolbar} from '@material-ui/data-grid';\nimport {Box, makeStyles} from '@material-ui/core';\nimport {Cloud} from \"../../types/cloud\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    height: 950,\n    width: '100%',\n  },\n}));\n\ntype propsType = {\n  data: Cloud[],\n  isLoading: boolean\n}\nfunction CloudsDataGrid({data, isLoading}: propsType): JSX.Element {\n  const classes = useStyles();\n\n  const columns = [\n    {\n      field: 'id',\n      headerName: 'ID',\n      flex: 1,\n      sortable: false,\n      filterable: false,\n      hide: true,\n    },\n    {\n      field: 'cloud_name',\n      headerName: 'Cloud name',\n      width: 300,\n      sortable: true,\n    },\n    {\n      field: 'cloud_description',\n      headerName: 'Cloud description',\n      flex: 2,\n      sortable: true,\n    },\n    {\n      field: 'geo_region',\n      headerName: 'Region',\n      flex: 1,\n      sortable: true,\n    },\n    {\n      field: 'geo_latitude',\n      headerName: 'GEO latitude',\n      flex: 0.5,\n      type: 'number',\n      sortable: true,\n    },\n    {\n      field: 'geo_longitude',\n      headerName: 'GEO longitude',\n      flex: 0.5,\n      type: 'number',\n      sortable: true,\n    },\n  ];\n\n  return (\n      <Box className={classes.table}>\n        <DataGrid\n            columns={columns}\n            rows={data}\n            pageSize={15}\n            disableColumnMenu\n            disableDensitySelector\n            loading={isLoading}\n            components={{Toolbar: GridToolbar}}\n            checkboxSelection/>\n      </Box>\n  );\n}\n\nexport default CloudsDataGrid;\n\n\n\n","import React from 'react';\nimport {Box, FormControl, InputLabel, makeStyles, MenuItem, Select} from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    filterProviderBox: {\n        marginTop: 50,\n        marginBottom: 30,\n        maxWidth: 300\n    },\n}));\n\nexport enum ProviderListItem {\n    ALL = 'all',\n    GOOGLE = 'google',\n    AWS = 'aws',\n    DO = 'do',\n    AZURE = 'azure',\n    UP_CLOUD = 'upcloud',\n}\n\ntype propsType = {\n    value: ProviderListItem,\n    onChange: (event: React.ChangeEvent<{ value: any }>) => any\n}\n\nfunction FilterProvider({value, onChange}: propsType): JSX.Element {\n    const classes = useStyles();\n\n    const MenuList = [\n        {value: ProviderListItem.ALL, title: 'ALL PROVIDERS'},\n        {value: ProviderListItem.GOOGLE, title: 'Google Cloud Platform'},\n        {value: ProviderListItem.AWS, title: 'Amazon Web Services'},\n        {value: ProviderListItem.DO, title: 'Digitalocean'},\n        {value: ProviderListItem.AZURE, title: 'Azure'},\n        {value: ProviderListItem.UP_CLOUD, title: 'UpCloud'},\n    ];\n\n    return (\n        <Box className={classes.filterProviderBox}>\n            <FormControl fullWidth>\n                <InputLabel>Filter by cloud provider</InputLabel>\n                <Select value={value} onChange={onChange}>\n                    {MenuList.map((item) => (\n                        <MenuItem value={item.value} key={item.value}>{item.title}</MenuItem>\n                    ))}\n\n                </Select>\n                <InputLabel>Filter by cloud provider</InputLabel>\n            </FormControl>\n        </Box>\n    );\n}\n\nexport default FilterProvider;\n\n\n\n","import {RouteProps} from 'react-router-dom'\nimport HomePage from '../pages/home';\nimport CloudsPage from '../pages/clouds';\n\n// TODO: Use private routes for private pages after add authentication\n\nexport interface Path extends RouteProps {\n    isPrivate?: boolean,\n}\n\nexport const paths: Path[] = [\n    {\n        path: '/home',\n        component: HomePage,\n        exact: false,\n        isPrivate: false,\n    },\n    {\n        path: ['/', '/clouds'],\n        component: CloudsPage,\n        exact: true,\n        isPrivate: false,\n    },\n];\n","import React, {useEffect, useState} from 'react';\nimport DefaultLayout from '../../layouts/default';\nimport {GetClouds} from '../../services/api';\nimport CloudsDataGrid from '../../components/clouds-data-grid';\nimport {Typography} from \"@material-ui/core\";\nimport {Cloud} from \"../../types/cloud\";\nimport FilterProvider, {ProviderListItem} from \"../../components/filter-provider\";\n\nconst CloudsPage: React.FC = (): JSX.Element => {\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [clouds, setClouds] = useState<Cloud[]>([]);\n    const [filterProvider, setFilterProvider] = useState<ProviderListItem>(ProviderListItem.ALL);\n    const [filteredClouds, setFilteredClouds] = useState<Cloud[]>([]);\n\n    useEffect(() => {\n        setIsLoading(true);\n        GetClouds()\n            .then(response => {\n                return response.data?.clouds.map((item, index) => ({\n                    ...item, id: index,\n                }));\n            })\n            .then(response => {\n                setClouds(response);\n                setIsLoading(false);\n                // console.table(response);\n            })\n            .catch(error => {\n                //TODO: Use material-ui for show errors\n                alert(error.message);\n                setIsLoading(false);\n                // console.log(error.message);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (filterProvider === ProviderListItem.ALL) {\n            setFilteredClouds(clouds);\n        } else {\n            const newFilteredClouds = clouds.filter((item) => item.cloud_name.startsWith(`${filterProvider}-`));\n            setFilteredClouds(newFilteredClouds);\n        }\n    }, [clouds, filterProvider]);\n\n    const handleFilterProvider = (event: React.ChangeEvent<{ value: ProviderListItem }>) => {\n        setFilterProvider(event.target.value);\n    };\n\n    return (\n        <DefaultLayout>\n            <Typography variant=\"h5\" gutterBottom>\n                Clouds list (Alpha version)\n            </Typography>\n            <FilterProvider value={filterProvider} onChange={handleFilterProvider}/>\n\n            <CloudsDataGrid data={filteredClouds} isLoading={isLoading}/>\n        </DefaultLayout>\n    );\n}\n\nexport default CloudsPage;\n","import {MainServer} from '../client';\nimport {Cloud} from \"../../types/cloud\";\n\ninterface CloudResponse {\n    clouds: Cloud[]\n}\n\nexport const GetClouds = () =>\n    MainServer.request<CloudResponse>(\n        'GET',\n        `clouds`,\n    );\n\n// export const GetClouds = (perPage: number = 20) =>\n//     MainServer.request<CloudResponse, { per_page: number }>(\n//         'GET',\n//         `clouds`,\n//         {per_page: perPage}\n//     );","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport {PrivateRoute} from './private-route';\nimport {paths} from './paths';\n\nconst AppRoute: React.FC = (): JSX.Element => (\n    <BrowserRouter>\n        <Switch>\n            {paths.map((route, index) =>\n                // We can use index as a unique key in the map\n                // because route is NOT deletable\n                route.isPrivate ? (\n                    <PrivateRoute key={index} {...route} />\n                ) : (\n                    <Route key={index} {...route} />\n                ),\n            )}\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default AppRoute;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRoute from './routes';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <AppRoute/>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}